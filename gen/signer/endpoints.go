// Code generated by goa v3.12.3, DO NOT EDIT.
//
// signer endpoints
//
// Command:
// $ goa gen github.com/eclipse-xfsc/crypto-provider-service/design

package signer

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "signer" service endpoints.
type Endpoints struct {
	Namespaces          goa.Endpoint
	NamespaceKeys       goa.Endpoint
	VerificationMethod  goa.Endpoint
	VerificationMethods goa.Endpoint
	JwkPublicKey        goa.Endpoint
	CredentialProof     goa.Endpoint
	PresentationProof   goa.Endpoint
	CreateCredential    goa.Endpoint
	CreatePresentation  goa.Endpoint
	VerifyCredential    goa.Endpoint
	VerifyPresentation  goa.Endpoint
	Sign                goa.Endpoint
	DidDoc              goa.Endpoint
	DidList             goa.Endpoint
	DidConfiguration    goa.Endpoint
	Jwks                goa.Endpoint
}

// NewEndpoints wraps the methods of the "signer" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Namespaces:          NewNamespacesEndpoint(s),
		NamespaceKeys:       NewNamespaceKeysEndpoint(s),
		VerificationMethod:  NewVerificationMethodEndpoint(s),
		VerificationMethods: NewVerificationMethodsEndpoint(s),
		JwkPublicKey:        NewJwkPublicKeyEndpoint(s),
		CredentialProof:     NewCredentialProofEndpoint(s),
		PresentationProof:   NewPresentationProofEndpoint(s),
		CreateCredential:    NewCreateCredentialEndpoint(s),
		CreatePresentation:  NewCreatePresentationEndpoint(s),
		VerifyCredential:    NewVerifyCredentialEndpoint(s),
		VerifyPresentation:  NewVerifyPresentationEndpoint(s),
		Sign:                NewSignEndpoint(s),
		DidDoc:              NewDidDocEndpoint(s),
		DidList:             NewDidListEndpoint(s),
		DidConfiguration:    NewDidConfigurationEndpoint(s),
		Jwks:                NewJwksEndpoint(s),
	}
}

// Use applies the given middleware to all the "signer" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Namespaces = m(e.Namespaces)
	e.NamespaceKeys = m(e.NamespaceKeys)
	e.VerificationMethod = m(e.VerificationMethod)
	e.VerificationMethods = m(e.VerificationMethods)
	e.JwkPublicKey = m(e.JwkPublicKey)
	e.CredentialProof = m(e.CredentialProof)
	e.PresentationProof = m(e.PresentationProof)
	e.CreateCredential = m(e.CreateCredential)
	e.CreatePresentation = m(e.CreatePresentation)
	e.VerifyCredential = m(e.VerifyCredential)
	e.VerifyPresentation = m(e.VerifyPresentation)
	e.Sign = m(e.Sign)
	e.DidDoc = m(e.DidDoc)
	e.DidList = m(e.DidList)
	e.DidConfiguration = m(e.DidConfiguration)
	e.Jwks = m(e.Jwks)
}

// NewNamespacesEndpoint returns an endpoint function that calls the method
// "Namespaces" of service "signer".
func NewNamespacesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Namespaces(ctx)
	}
}

// NewNamespaceKeysEndpoint returns an endpoint function that calls the method
// "NamespaceKeys" of service "signer".
func NewNamespaceKeysEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*NamespaceKeysRequest)
		return s.NamespaceKeys(ctx, p)
	}
}

// NewVerificationMethodEndpoint returns an endpoint function that calls the
// method "VerificationMethod" of service "signer".
func NewVerificationMethodEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*VerificationMethodRequest)
		return s.VerificationMethod(ctx, p)
	}
}

// NewVerificationMethodsEndpoint returns an endpoint function that calls the
// method "VerificationMethods" of service "signer".
func NewVerificationMethodsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*VerificationMethodsRequest)
		return s.VerificationMethods(ctx, p)
	}
}

// NewJwkPublicKeyEndpoint returns an endpoint function that calls the method
// "JwkPublicKey" of service "signer".
func NewJwkPublicKeyEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*JwkPublicKeyRequest)
		return s.JwkPublicKey(ctx, p)
	}
}

// NewCredentialProofEndpoint returns an endpoint function that calls the
// method "CredentialProof" of service "signer".
func NewCredentialProofEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CredentialProofRequest)
		return s.CredentialProof(ctx, p)
	}
}

// NewPresentationProofEndpoint returns an endpoint function that calls the
// method "PresentationProof" of service "signer".
func NewPresentationProofEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*PresentationProofRequest)
		return s.PresentationProof(ctx, p)
	}
}

// NewCreateCredentialEndpoint returns an endpoint function that calls the
// method "CreateCredential" of service "signer".
func NewCreateCredentialEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateCredentialRequest)
		return s.CreateCredential(ctx, p)
	}
}

// NewCreatePresentationEndpoint returns an endpoint function that calls the
// method "CreatePresentation" of service "signer".
func NewCreatePresentationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreatePresentationRequest)
		return s.CreatePresentation(ctx, p)
	}
}

// NewVerifyCredentialEndpoint returns an endpoint function that calls the
// method "VerifyCredential" of service "signer".
func NewVerifyCredentialEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*VerifyCredentialRequest)
		return s.VerifyCredential(ctx, p)
	}
}

// NewVerifyPresentationEndpoint returns an endpoint function that calls the
// method "VerifyPresentation" of service "signer".
func NewVerifyPresentationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*VerifyPresentationRequest)
		return s.VerifyPresentation(ctx, p)
	}
}

// NewSignEndpoint returns an endpoint function that calls the method "Sign" of
// service "signer".
func NewSignEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SignRequest)
		return s.Sign(ctx, p)
	}
}

// NewDidDocEndpoint returns an endpoint function that calls the method
// "didDoc" of service "signer".
func NewDidDocEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DidRequest)
		return s.DidDoc(ctx, p)
	}
}

// NewDidListEndpoint returns an endpoint function that calls the method
// "didList" of service "signer".
func NewDidListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DidListRequest)
		return s.DidList(ctx, p)
	}
}

// NewDidConfigurationEndpoint returns an endpoint function that calls the
// method "DidConfiguration" of service "signer".
func NewDidConfigurationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DidConfiguration2)
		return s.DidConfiguration(ctx, p)
	}
}

// NewJwksEndpoint returns an endpoint function that calls the method "Jwks" of
// service "signer".
func NewJwksEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*JwksRequest)
		return s.Jwks(ctx, p)
	}
}
